Started by user Dicoding Indonesia
Obtained Jenkinsfile from git /home/Documents/Code/Dicoding/SIB 5/a428-cicd-labs
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
Selected Git installation does not exist. Using Default
The recommended git tool is: NONE
No credentials specified
 > git rev-parse --resolve-git-dir /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url /home/Documents/Code/Dicoding/SIB 5/a428-cicd-labs # timeout=10
Fetching upstream changes from /home/Documents/Code/Dicoding/SIB 5/a428-cicd-labs
 > git --version # timeout=10
 > git --version # 'git version 2.39.2'
 > git fetch --tags --force --progress -- /home/Documents/Code/Dicoding/SIB 5/a428-cicd-labs +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/react-app^{commit} # timeout=10
Checking out Revision fc758fe540b8f71015ec36d60e5b4f365196f052 (refs/remotes/origin/react-app)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f fc758fe540b8f71015ec36d60e5b4f365196f052 # timeout=10
Commit message: "Add Test stage"
 > git rev-list --no-walk a6ecf655268858f056d45e1589c2c52f3b9c3648 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . node:16-buster-slim
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
Jenkins seems to be running inside container a165e9b8e6456a05963d75ee2ae984171d0d21cf4de2bedb67d636aa22d8b5fd
but /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu could not be found among []
but /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu@tmp could not be found among []
$ docker run -t -d -u 1000:1000 -p 3000:3000 -w /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu -v /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu:/var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu:rw,z -v /var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu@tmp:/var/jenkins_home/workspace/submission-cicd-pipeline-rayhanpangestu@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** node:16-buster-slim cat
$ docker top d303653515aca20a17e6625f4c762e229960ccd75dd40e756f24883b97186e71 -eo pid,comm
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] sh
+ npm install

added 1 package, changed 1 package, and audited 1924 packages in 24s

196 packages are looking for funding
  run `npm fund` for details

107 vulnerabilities (1 low, 80 moderate, 17 high, 9 critical)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] sh
+ ./jenkins/scripts/test.sh
The following "npm" command (if executed) installs the "cross-env"
dependency into the local "node_modules" directory, which will ultimately
be stored in the Jenkins home directory. As described in
https://docs.npmjs.com/cli/install, the "--save-dev" flag causes the
"cross-env" dependency to be installed as "devDependencies". For the
purposes of this tutorial, this flag is not important. However, when
installing this dependency, it would typically be done so using this
flag. For a comprehensive explanation about "devDependencies", see
https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies.
+ set +x
The following "npm" command tests that your simple Node.js/React
application renders satisfactorily. This command actually invokes the test
runner Jest (https://facebook.github.io/jest/).
+ npm test

> my-app@0.1.0 test
> react-scripts test --env=jsdom

PASS src/App.test.js
  âœ“ renders without crashing (19 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        1.197 s
Ran all test suites.
Jest did not exit one second after the test run has completed.

This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.
[0;33mOne of your dependencies, babel-preset-react-app, is importing the
"@babel/plugin-proposal-private-property-in-object" package without
declaring it in its dependencies. This is currently working because
"@babel/plugin-proposal-private-property-in-object" is already in your
node_modules folder for unrelated reasons, but it [1mmay break at any time[0;33m.

babel-preset-react-app is part of the create-react-app project, [1mwhich
is not maintianed anymore[0;33m. It is thus unlikely that this bug will
ever be fixed. Add "@babel/plugin-proposal-private-property-in-object" to
your devDependencies to work around this error. This will make this message
go away.[0m
  
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
$ docker stop --time=1 d303653515aca20a17e6625f4c762e229960ccd75dd40e756f24883b97186e71
$ docker rm -f d303653515aca20a17e6625f4c762e229960ccd75dd40e756f24883b97186e71
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
